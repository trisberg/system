apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: riff-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    component: build.projectriff.io
  name: applications.build.projectriff.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].reason
    name: Reason
    type: string
  group: build.projectriff.io
  names:
    kind: Application
    plural: applications
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Application is the Schema for the applications API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ApplicationSpec defines the desired state of Application
          properties:
            cacheSize:
              description: CacheSize for an optional PersistentVolumeClaim used to
                store intermediate build artifacts, like a maven cache, for future
                builds.
              type: string
            image:
              description: Image repository to push built images. May contain a leading
                underscore to have the default image prefix applied, or be `_` to
                combine the default image prefix with the resource's name as a default
                value.
              type: string
            source:
              description: Source location. Required for on cluster builds.
              properties:
                git:
                  description: Git source location to clone and checkout for the build.
                  properties:
                    revision:
                      description: Revision in the git repository to checkout. May
                        be any valid refspec including commit sha, tags or branches.
                      type: string
                    url:
                      description: URL to a cloneable git repository.
                      type: string
                  required:
                  - revision
                  - url
                  type: object
                subPath:
                  description: SubPath within the source to mount. Files outside of
                    the sub path will not be available to tbe build.
                  type: string
              required:
              - git
              type: object
          required:
          - image
          type: object
        status:
          description: ApplicationStatus defines the observed state of Application
          properties:
            buildCacheName:
              description: BuildCacheName is the name of the PersistentVolumeClaim
                used as a cache for intermediate build resources.
              type: string
            buildName:
              description: BuildName is the name of the Knative Build backing this
                build.
              type: string
            conditions:
              description: Conditions the latest available observations of a resource's
                current state.
              items:
                description: 'Conditions defines a readiness condition for a Knative
                  resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another. We use VolatileTime
                      in place of metav1.Time to exclude this from creating equality.Semantic
                      differences (all other things held constant).
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  severity:
                    description: Severity with which to treat failures of this type
                      of condition. When this is not specified, it defaults to Error.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            latestImage:
              description: LatestImage is the most recent image for this build.
              type: string
            observedGeneration:
              description: ObservedGeneration is the 'Generation' of the Service that
                was last processed by the controller.
              format: int64
              type: integer
            targetImage:
              description: TargetImage is the resolved image repository where built
                images are pushed.
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    component: build.projectriff.io
  name: containers.build.projectriff.io
spec:
  group: build.projectriff.io
  names:
    kind: Container
    plural: containers
  scope: ""
  validation:
    openAPIV3Schema:
      description: Container is the Schema for the containers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ContainerSpec defines the desired state of Container
          properties:
            image:
              description: Image repository to watch for built images. May contain
                a leading underscore to have the default image prefix applied, or
                be `_` to combine the default image prefix with the resource's name
                as a default value.
              type: string
          required:
          - image
          type: object
        status:
          description: ContainerStatus defines the observed state of Container
          properties:
            buildCacheName:
              description: BuildCacheName is the name of the PersistentVolumeClaim
                used as a cache for intermediate build resources.
              type: string
            buildName:
              description: BuildName is the name of the Knative Build backing this
                build.
              type: string
            conditions:
              description: Conditions the latest available observations of a resource's
                current state.
              items:
                description: 'Conditions defines a readiness condition for a Knative
                  resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another. We use VolatileTime
                      in place of metav1.Time to exclude this from creating equality.Semantic
                      differences (all other things held constant).
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  severity:
                    description: Severity with which to treat failures of this type
                      of condition. When this is not specified, it defaults to Error.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            latestImage:
              description: LatestImage is the most recent image for this build.
              type: string
            observedGeneration:
              description: ObservedGeneration is the 'Generation' of the Service that
                was last processed by the controller.
              format: int64
              type: integer
            targetImage:
              description: TargetImage is the resolved image repository where built
                images are pushed.
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    component: build.projectriff.io
  name: functions.build.projectriff.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].status
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].reason
    name: Reason
    type: string
  group: build.projectriff.io
  names:
    kind: Function
    plural: functions
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Function is the Schema for the functions API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: FunctionSpec defines the desired state of Function
          properties:
            artifact:
              description: Artifact file containing the function within the build
                workspace.
              type: string
            cacheSize:
              description: CacheSize of persistent volume to store resources between
                builds
              type: string
            handler:
              description: Handler name of the method or class to invoke. The value
                depends on the invoker.
              type: string
            image:
              description: Image repository to push built images. May contain a leading
                underscore to have the default image prefix applied, or be `_` to
                combine the default image prefix with the resource's name as a default
                value.
              type: string
            invoker:
              description: Invoker language runtime name. Detected by default.
              type: string
            source:
              description: Source location. Required for on cluster builds.
              properties:
                git:
                  description: Git source location to clone and checkout for the build.
                  properties:
                    revision:
                      description: Revision in the git repository to checkout. May
                        be any valid refspec including commit sha, tags or branches.
                      type: string
                    url:
                      description: URL to a cloneable git repository.
                      type: string
                  required:
                  - revision
                  - url
                  type: object
                subPath:
                  description: SubPath within the source to mount. Files outside of
                    the sub path will not be available to tbe build.
                  type: string
              required:
              - git
              type: object
          required:
          - image
          type: object
        status:
          description: FunctionStatus defines the observed state of Function
          properties:
            buildCacheName:
              description: BuildCacheName is the name of the PersistentVolumeClaim
                used as a cache for intermediate build resources.
              type: string
            buildName:
              description: BuildName is the name of the Knative Build backing this
                build.
              type: string
            conditions:
              description: Conditions the latest available observations of a resource's
                current state.
              items:
                description: 'Conditions defines a readiness condition for a Knative
                  resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another. We use VolatileTime
                      in place of metav1.Time to exclude this from creating equality.Semantic
                      differences (all other things held constant).
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  severity:
                    description: Severity with which to treat failures of this type
                      of condition. When this is not specified, it defaults to Error.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            latestImage:
              description: LatestImage is the most recent image for this build.
              type: string
            observedGeneration:
              description: ObservedGeneration is the 'Generation' of the Service that
                was last processed by the controller.
              format: int64
              type: integer
            targetImage:
              description: TargetImage is the resolved image repository where built
                images are pushed.
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    component: build.projectriff.io
  name: riff-build-leader-election-role
  namespace: riff-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    component: build.projectriff.io
  name: riff-build-manager-role
rules:
- apiGroups:
  - build.knative.dev
  resources:
  - builds
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - build.projectriff.io
  resources:
  - applications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - build.projectriff.io
  resources:
  - applications
  - functions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - build.projectriff.io
  resources:
  - applications/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - build.projectriff.io
  resources:
  - containers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - build.projectriff.io
  resources:
  - containers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - build.projectriff.io
  resources:
  - functions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - build.projectriff.io
  resources:
  - functions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    component: build.projectriff.io
  name: riff-build-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    component: build.projectriff.io
  name: riff-build-leader-election-rolebinding
  namespace: riff-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: riff-build-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: riff-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    component: build.projectriff.io
  name: riff-build-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: riff-build-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: riff-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    component: build.projectriff.io
  name: riff-build-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: riff-build-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: riff-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    component: build.projectriff.io
    control-plane: controller-manager
  name: riff-build-controller-manager-metrics-service
  namespace: riff-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    component: build.projectriff.io
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: build.projectriff.io
    control-plane: controller-manager
  name: riff-build-controller-manager
  namespace: riff-system
spec:
  replicas: 1
  selector:
    matchLabels:
      component: build.projectriff.io
      control-plane: controller-manager
  template:
    metadata:
      labels:
        component: build.projectriff.io
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        image: github.com/projectriff/system/cmd/managers/build
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
